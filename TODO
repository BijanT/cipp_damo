- Test --numa_node 0 case
- Implement age distribution reporting
- Test and 'status'
- Support rss recording
- Support filtering regions with min age
- Make stateful (maybe we need .damo file under /tmp/)
- Support 'init': Do the system/features check and store the result in a file
  (.damo?)
- Support 'cleanup': echo 0 > nr_kdamonds
- Document new workflow: init-start-show-tune-stop
- Support ongoing schemes
- Cleanup schemes test using damo status
- Find a better and consistent rule for feature check
  - Check from subcommands
  - Check from _damon (done)
  - Check from _damon_{sys,dbg}fs
  - No check at all
  - Or, goes from option 1 to option 4 incrementally
- Implement histogram stat regions output
- Support DAMOS quotas/watermarks/filters with command line options
- Deprecate old features
  - Deprecate stat (done.  Code also removed)
  - Deprecate --rbuf and in-kernel record feature support (done.  code also removed)
  - Deprecate single line per-scheme (done.  code moved to _damon_deprecated)
  - Deprecate v1-v3 schemes (done.  necessary code moved to _damon_deprecated)
  - Deprecate python2 support (done.  code moved to _damon_deprecated)
  - Deprecate scheme subcommand
    - Can be replaced by start or tune
  - Deprecate old scheme usages in tests
  - Deprecate DAMON results record binary format (noticing for Q3 deprecation)
- Refactor heats code
- Add test for translate_damos and convert_record_format
- damo status features implementation
  - specify target to show
- damo show features implementation
  - time based filtering
  - collapse by time
  - collapse by priority value (more histogram control)
  - support target specification
  - use address ranges damos filter if available
  - Implement min/max snapshot format keyword
  - Consider <box><size> <access rate> <age> as default
    - Current default region format might make sense to be optional?
- Support DAMOS tried regions tracepoint
- Test DAMOS interval
- Make memory efficient record format
  - Current json format takes too much memory for parsing, if record was for
    long time.
